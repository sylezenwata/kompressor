!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Kompressor=t():e.Kompressor=t()}(self,(function(){return function(){"use strict";return class{constructor({image:e,callback:t=null,imageWidth:i=193,imageHeight:s=193,returnBlob:a=!0,reduceQuality:n=!1,validExtensionArray:r=["jpg","jpeg","png"]}){this.setProps({image:e,validExtensionArray:r,imageWidth:i,imageHeight:s,reduceQuality:n,returnBlob:a,callback:t}),this.setExtension(),this.validateExtension(),this.compressImage()}setProps(e){Object.keys(e).forEach((t=>{this[t]=e[t]}))}setExtension(){let e=this.image.name.lastIndexOf(".");this.imageExtension=this.image.name.slice(e+1)}validateExtension(){this.isValidExtension="object"!=typeof this.validExtensionArray||this.validExtensionArray.filter((e=>e.toLowerCase()===this.imageExtension.toLowerCase())).length>0}compressImage(){if(!this.isValidExtension){let e=this.setResponse({error:{type:"extension",msg:`"${this.imageExtension}" is not a valid image extension type in "${this.validExtensionArray.join(", ")}"`}});return this.callback?this.callback(e):e}let e=new FileReader;e.readAsDataURL(this.image),e.onload=e=>{let t=new Image;t.src=e.target.result,t.onload=()=>{let e=this.imageWidth?this.imageWidth:t.naturalWidth,i=this.imageHeight?this.imageHeight:t.naturalHeight,s=document.createElement("canvas");s.width=e,s.height=i;let a=s.getContext("2d");a.imageSmoothingEnabled=!0,a.drawImage(t,0,0,e,i);let n=a.canvas.toDataURL(`image/${this.imageExtension}`,this.reduceQuality?.1:.9);if(this.returnBlob){let e=this.setResponse({data:{dataURI:n,blob:this.convertToBlob(n)}});return this.callback?this.callback(e):e}let r=this.setResponse({data:{dataURI:n}});return this.callback?this.callback(r):r},t.onerror=e=>{let t=this.setResponse({error:{type:"internal",msg:e}});return this.callback?this.callback(t):t}},e.onerror=e=>{let t=this.setResponse({error:{type:"internal",msg:e}});return this.callback?this.callback(t):t}}convertToBlob(e){try{for(var t=atob(e.split(",")[1]),i=e.split(",")[0].split(":")[1].split(";")[0],s=new ArrayBuffer(t.length),a=new Uint8Array(s),n=0;n<t.length;n++)a[n]=t.charCodeAt(n);return new Blob([s],{type:i})}catch(e){return console.log(e),null}}setResponse({data:e=null,error:t=null}){return{error:t,data:e}}}}()}));