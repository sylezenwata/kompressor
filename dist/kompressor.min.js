/**
 * kompressor.js 1.0.2
 * MIT License
 * Copyright (c) 2021 sylvester ezenwata
 * https://github.com/sylezenwata/kompressor.git
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Kompressor=t():e.Kompressor=t()}(self,(function(){return function(){"use strict";var e={d:function(t,i){for(var n in i)e.o(i,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:i[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:function(){return i}});const i=class{constructor({image:e,callback:t,imageWidth:i=null,imageHeight:n=null,returnBlob:r=!1,reduceQuality:s=!0,validExtensionArray:o=["jpg","jpeg","png"]}){this.setProps({image:e,validExtensionArray:o,imageWidth:i,imageHeight:n,reduceQuality:s,returnBlob:r,callback:t}),this.setExtension(),this.validateExtension(),this.compressImage()}setProps(e){e.response=null,Object.keys(e).forEach((t=>{this[t]=e[t]}))}setExtension(){let e=this.image.name.lastIndexOf(".");this.imageExtension=this.image.name.slice(e+1)}validateExtension(){this.isValidExtension=!Array.isArray(this.validExtensionArray)||this.validExtensionArray.filter((e=>e.toLowerCase()===this.imageExtension.toLowerCase())).length>0}compressImage(){if(!this.isValidExtension){let e=this.setResponse({error:{type:"extension",msg:`"${this.imageExtension}" file extension type is neither "${this.validExtensionArray.join(" or ")}"`}});return this.callback(e)}let e=new FileReader;e.readAsDataURL(this.image),e.onload=e=>{let t=new Image;t.src=e.target.result,t.onload=()=>{let e=this.imageWidth?this.imageWidth:t.naturalWidth,i=this.imageHeight?this.imageHeight:t.naturalHeight,n=document.createElement("canvas");n.width=e,n.height=i;let r=n.getContext("2d");r.imageSmoothingEnabled=!0,r.drawImage(t,0,0,e,i);let s=r.canvas.toDataURL(`image/${"jpg"===this.imageExtension.toLowerCase()?"jpeg":this.imageExtension}`,this.reduceQuality?.1:.9);if(this.returnBlob){let e=this.setResponse({data:{dataURI:s,blob:this.convertToBlob(s)}});return this.callback(e)}let o=this.setResponse({data:{dataURI:s}});return this.callback(o)},t.onerror=e=>{let t=this.setResponse({error:{type:"internal",msg:e}});return this.callback(t)}},e.onerror=e=>{let t=this.setResponse({error:{type:"internal",msg:e}});return this.callback(t)}}convertToBlob(e){try{const i=atob(e.split(",")[1]),n=e.split(",")[0].split(":")[1].split(";")[0];let r=new ArrayBuffer(i.length);var t=new Uint8Array(r);for(let e=0;e<i.length;e++)t[e]=i.charCodeAt(e);return new Blob([r],{type:n})}catch(e){return console.log(e),null}}setResponse({data:e=null,error:t=null}){return{error:t,data:e}}};return t}()}));